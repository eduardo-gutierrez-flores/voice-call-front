{"version":3,"sources":["components/PhoneCard.jsx","components/CallAlert.jsx","components/LeaveAlert.jsx","components/SendCall.jsx","App.js","reportWebVitals.js","index.js"],"names":["PhoneCard","user","initCall","rtc","callInProsess","userInCall","useState","users","setUsers","channelName","id","role","RtcRole","PUBLISHER","privilegeExpiredTs","Math","floor","Date","now","options","appId","channel","createCall","token","RtcTokenBuilder","buildTokenWithUid","name","client","join","uid","AgoraRTC","createMicrophoneAudioTrack","localAudioTrack","publish","useEffect","Card","sx","display","width","height","alignItems","padding","Stack","direction","spacing","Avatar","separate","split","toUpperCase","getAvatar","Box","flexDirection","Typography","variant","gutterBottom","component","charAt","slice","capitalize","some","IconButton","onClick","SvgIcon","AddIcCallIcon","inheritViewBox","color","CallAlert","open","reciveCall","declineCall","call","Collapse","in","Alert","action","PhoneCallbackIcon","CallEndIcon","mb","nameEmit","LeaveAlert","onClose","size","fontSize","severity","SendCall","CallMadeIcon","socket","io","connect","App","setCall","setName","setRTC","setCallInProsess","leaveCallName","setLeaveCall","usersInCall","setUsersInCall","sendCall","setSendCall","isActive","setIsActive","useLayoutEffect","startBasicCall","createClient","mode","codec","on","mediaType","console","log","subscribe","audioTrack","play","unsubscribe","nameUser","room","emit","joinCall","idEmit","leaveCall","close","leave","undefined","data","usersFilter","filter","u","className","Container","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","margin","gap","map","TextField","onChange","event","target","value","label","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d674b124.chunk.js","sourcesContent":["import AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\n// import CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport { SvgIcon } from \"@mui/material\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport {RtcTokenBuilder, RtcRole} from 'agora-access-token';\r\nimport { useState } from 'react'\r\nimport { useEffect } from \"react\";\r\n\r\nconst PhoneCard = ({user, initCall, rtc, callInProsess, userInCall}) => {\r\n    const [users, setUsers] = useState(userInCall);\r\n    const appID = '0c962528da524ac1a646aa034f8b5385';\r\n    const appCertificate = '88d7864ddaf34842813b3b9237670158';\r\n    const channelName = user.id;\r\n    const role = RtcRole.PUBLISHER;\r\n    \r\n    const expirationTimeInSeconds = 3600\r\n    \r\n    const currentTimestamp = Math.floor(Date.now() / 1000)\r\n    \r\n    const privilegeExpiredTs = currentTimestamp + expirationTimeInSeconds\r\n    const options = {\r\n        appId: \"0c962528da524ac1a646aa034f8b5385\",\r\n        channel: user.id,\r\n    };\r\n    \r\n    const createCall = async () => {\r\n        const token = RtcTokenBuilder.buildTokenWithUid(appID, appCertificate, channelName, 0, role, privilegeExpiredTs);\r\n        initCall(token, user.id, user.name)\r\n        await rtc.client.join(options.appId, options.channel, token, options.uid);\r\n        rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\r\n        await rtc.client.publish([rtc.localAudioTrack])\r\n    }\r\n\r\n    // const leaveCall = async () => {\r\n    //     rtc.localAudioTrack.close();\r\n    //     await rtc.client.leave();\r\n    // }\r\n\r\n    const getAvatar = (name) => {\r\n        const separate = name.split(' ');\r\n        return `${separate[0][0].toUpperCase()}${separate[1] ? separate[1][0].toUpperCase(): ''}`\r\n    }\r\n    \r\n    const capitalize = (name) => {\r\n        const separate = name.split(' ');\r\n        return `${separate[0].charAt(0).toUpperCase()}${separate[0].slice(1)} ${separate[1] ? separate[1].charAt(0).toUpperCase(): ''}${separate[1] ? separate[1].slice(1): ''}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsers(userInCall)\r\n    }, [userInCall])\r\n\r\n    return (\r\n        <Card sx={{ display: 'flex', width: '300px', height: '70px', alignItems: 'center', padding: '10px'}}>\r\n            <Stack direction=\"row\" spacing={2}>\r\n                <Avatar>{ getAvatar(user.name) }</Avatar>\r\n            </Stack>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', padding: '2rem' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        { capitalize(user.name) }\r\n                    </Typography>\r\n                </Box>\r\n                {!users?.some((id) => id === user.id) && !callInProsess  ?\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <IconButton aria-label=\"next\" onClick={createCall}>\r\n                            <SvgIcon component={AddIcCallIcon} inheritViewBox color=\"green\" />\r\n                        </IconButton>\r\n                        {/* <IconButton aria-label=\"play/pause\" onClick={leaveCall}>\r\n                            <SvgIcon component={CallEndIcon} inheritViewBox />\r\n                        </IconButton> */}\r\n                    </Box>\r\n                    : null\r\n                }\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PhoneCard;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { SvgIcon } from \"@mui/material\";\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\n\r\nexport default function CallAlert({open, reciveCall, declineCall, callInProsess, call}) {\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n        <Collapse in={open}>\r\n            <Alert\r\n            action={\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {!callInProsess &&\r\n                    <IconButton aria-label=\"next\" onClick={reciveCall}>\r\n                        <SvgIcon component={PhoneCallbackIcon} inheritViewBox color=\"green\" />\r\n                    </IconButton>\r\n                    }\r\n                    <IconButton aria-label=\"play/pause\" onClick={declineCall}>\r\n                        <SvgIcon component={CallEndIcon} inheritViewBox />\r\n                    </IconButton>\r\n                </Box>\r\n            }\r\n            sx={{ mb: 2 }}\r\n            >\r\n                {callInProsess ? 'En llamada con' : 'Llamada entrante de'} { call?.nameEmit }\r\n            </Alert>\r\n        </Collapse>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nexport default function LeaveAlert({onClose, open, name}) {\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Collapse in={open}>\r\n                <Alert\r\n                action={\r\n                    <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={onClose}\r\n                    >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n                sx={{ mb: 2 }}\r\n                severity='info'\r\n                >\r\n                    { name } ha abandonado la llamada\r\n                </Alert>\r\n            </Collapse>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { SvgIcon } from \"@mui/material\";\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport CallMadeIcon from '@mui/icons-material/CallMade';\r\n\r\nexport default function SendCall({open, declineCall, callInProsess, call}) {\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n        <Collapse in={open}>\r\n            <Alert\r\n            action={\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {!callInProsess &&\r\n                    <IconButton aria-label=\"next\">\r\n                        <SvgIcon component={CallMadeIcon} inheritViewBox color=\"green\" />\r\n                    </IconButton>\r\n                    }\r\n                    <IconButton aria-label=\"play/pause\" onClick={declineCall}>\r\n                        <SvgIcon component={CallEndIcon} inheritViewBox />\r\n                    </IconButton>\r\n                </Box>\r\n            }\r\n            sx={{ mb: 2 }}\r\n            >\r\n                {callInProsess ? 'En llamada con ' : 'Llamando a '} { call?.name }\r\n            </Alert>\r\n        </Collapse>\r\n        </Box>\r\n    );\r\n}\r\n","import './App.css';\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport * as React from 'react';\nimport io from \"socket.io-client\";\nimport PhoneCard from \"./components/PhoneCard\";\nimport { Container } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n// import CallScreen from './components/Call';\nimport CallAlert from './components/CallAlert';\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport LeaveAlert from './components/LeaveAlert'\nimport SendCall from './components/SendCall';\nimport Typography from '@mui/material/Typography';\n\nconst socket = io.connect('https://voice-call-socket.herokuapp.com/');\n\nfunction App() {\n    const [call, setCall] = useState()\n    const [users, setUsers] = useState([]);\n    const [name, setName] = useState('')\n    const [rtc, setRTC] = useState({ localAudioTrack: null, client: null });\n    const [callInProsess, setCallInProsess] = useState(false);\n    const [leaveCallName, setLeaveCall] = useState();\n    const [usersInCall, setUsersInCall] = useState([]);\n    const [sendCall, setSendCall] = useState();\n    const [isActive, setIsActive] = useState(false);\n    const options = {\n        appId: \"0c962528da524ac1a646aa034f8b5385\",\n        channel: \"test\",\n    };\n\n    useLayoutEffect(() => {\n        const startBasicCall = async () => {\n            const client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n\n            client.on(\"user-published\", async (user, mediaType) => {\n                console.log(user, mediaType);\n                await client.subscribe(user, mediaType);\n                if (mediaType === \"audio\") {\n                    const remoteAudioTrack = user.audioTrack;\n                    remoteAudioTrack.play();\n                }\n                \n                client.on(\"user-unpublished\", async (user) => {\n                    await client.unsubscribe(user);\n                });\n            });\n\n            setRTC((rtc) => ({...rtc, client}))\n        }\n        startBasicCall()\n    }, []);\n\n    const changeStatusToActive = () => {\n        socket.emit('create_user', { name })\n        setIsActive(true)\n    }\n    \n    const createCall = (token, id, nameUser) => {\n        console.log('CALL TO ', nameUser);\n        setCallInProsess(true);\n        setSendCall({name: nameUser, nameEmit: name, id, token, room: `${id}${socket.id}`})\n        socket.emit('create_call', {nameEmit: name, name: nameUser, id, token, room: `${id}${socket.id}`})\n    }\n\n    const joinCall = async () => {\n        await rtc.client.join(options.appId, call.id, call.token, options.uid);\n        rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n        await rtc.client.publish([rtc.localAudioTrack]);\n\n        socket.emit('answer_call', {\n            id: call.id,\n            idEmit: call.idEmit,\n            room: call.room\n        })\n        \n        setCallInProsess(true)\n    }\n    \n    const leaveCall = async () => {\n        setCallInProsess(false)\n        if(rtc.localAudioTrack) {\n            rtc.localAudioTrack.close();\n            await rtc.client.leave();\n        }\n\n        if(call) {\n            socket.emit('leave_call', {\n                name,\n                id: call.id,\n                token: call.token,\n                room: call.room,\n                idEmit: call.idEmit\n            })\n        }\n        \n        if(sendCall) {\n            socket.emit('leave_call', {\n                name,\n                id: socket.id,\n                token: sendCall.token,\n                room: sendCall.room,\n                idEmit: sendCall.idEmit\n            })\n        }\n\n        setCall(undefined)\n        setSendCall(undefined)\n    }\n\n    const cancelCall = () => {\n        socket.emit('cancel_call', {\n            name,\n            id: sendCall.id,\n            token: sendCall.token,\n            room: sendCall.room,\n            idEmit: sendCall.idEmit\n        })\n        leaveCall()\n    }\n\n    useEffect(() => {\n        socket.on('new_active', (data) => {\n            console.log(data);\n            const usersFilter = data.filter((user) => !users.some((u) => u.id === user.id) && user.id !== socket.id)\n            setUsers([...usersFilter]);\n        });\n        socket.on('recive_call', (data) => {\n            console.log(data);\n            setCall(data);\n        });\n        socket.on('leave', (data) => {\n            console.log(data);\n            setLeaveCall(data)\n        });\n        socket.on('users_in_call', (data) => {\n            console.log(data, sendCall?.id);\n            if(data.some((id) => id === sendCall?.id || id === call?.id)) {\n                setCallInProsess(true)\n            } else {\n                setCallInProsess(false)\n            }\n            setUsersInCall(data)\n        })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [call?.id, sendCall?.id]);\n    return (\n        <div className=\"App\">\n            <SendCall\n                open={sendCall !== undefined && !leaveCallName}\n                call={sendCall}\n                callInProsess={usersInCall.some((id) => id === sendCall?.id)}\n                declineCall={cancelCall}\n            />\n            <CallAlert open={call !== undefined && !leaveCallName} declineCall={() => leaveCall()} reciveCall={() => joinCall()} callInProsess={callInProsess} call={call} />\n            <LeaveAlert open={leaveCallName !== undefined} onClose={() => {leaveCall(); setLeaveCall(undefined)}} name={leaveCallName?.name} />\n            <Container>\n                <Box sx={{ width: '100%' }}>\n                    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={6}>\n                            <Box sx={{display: 'flex', margin: '2rem auto', width: '300px', gap: '1rem', flexDirection: 'column'}}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\" color='green'>\n                                    Usuarios Conectados\n                                </Typography>\n                                {users.map((user) =>\n                                    <PhoneCard\n                                        user={user}\n                                        initCall={(token, id, name) => createCall(token, id, name)}\n                                        rtc={rtc}\n                                        callInProsess={callInProsess}\n                                        userInCall={usersInCall}\n                                    />\n                                )}\n                            </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box sx={{margin: '2rem auto', width: '300px'}}>\n                                <TextField onChange={(event) => setName(event.target.value)} variant='standard' label='Ingresa tu nombre' />\n                            </Box>\n                            {isActive ?\n                                <Typography variant=\"h6\" gutterBottom component=\"div\" color='green'>\n                                    En linea\n                                </Typography>\n                            :\n                                <Box sx={{margin: '0 auto', width: '300px'}}>\n                                    <Button variant=\"outlined\" size='small' onClick={() => changeStatusToActive()}>Unirte</Button>\n                                </Box>\n                            }\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}