{"version":3,"sources":["components/PhoneCard.jsx","components/CallAlert.jsx","components/LeaveAlert.jsx","components/SendCall.jsx","App.js","reportWebVitals.js","index.js"],"names":["PhoneCard","user","initCall","rtc","callInProsess","userInCall","useState","users","setUsers","channelName","id","role","RtcRole","PUBLISHER","privilegeExpiredTs","Math","floor","Date","now","options","appId","channel","createCall","token","RtcTokenBuilder","buildTokenWithUid","name","client","join","uid","AgoraRTC","createMicrophoneAudioTrack","localAudioTrack","publish","leaveCall","close","leave","useEffect","Card","sx","display","width","height","alignItems","padding","Stack","direction","spacing","Avatar","separate","split","toUpperCase","getAvatar","Box","flexDirection","Typography","variant","gutterBottom","component","charAt","slice","capitalize","some","IconButton","onClick","SvgIcon","AddIcCallIcon","inheritViewBox","color","CallEndIcon","CallAlert","open","reciveCall","declineCall","call","Collapse","in","Alert","action","PhoneCallbackIcon","mb","nameEmit","LeaveAlert","onClose","size","fontSize","severity","SendCall","CallMadeIcon","socket","io","connect","App","setCall","setName","setRTC","setCallInProsess","leaveCallName","setLeaveCall","usersInCall","setUsersInCall","sendCall","setSendCall","useLayoutEffect","startBasicCall","createClient","mode","codec","on","mediaType","console","log","subscribe","audioTrack","play","unsubscribe","nameUser","room","emit","joinCall","idEmit","undefined","data","value","filter","className","Container","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","margin","gap","map","TextField","onChange","event","target","label","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f82c5ac7.chunk.js","sourcesContent":["import AgoraRTC from \"agora-rtc-sdk-ng\";\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport { SvgIcon } from \"@mui/material\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport {RtcTokenBuilder, RtcRole} from 'agora-access-token';\r\nimport { useState } from 'react'\r\nimport { useEffect } from \"react\";\r\n\r\nconst PhoneCard = ({user, initCall, rtc, callInProsess, userInCall}) => {\r\n    const [users, setUsers] = useState(userInCall);\r\n    const appID = '0c962528da524ac1a646aa034f8b5385';\r\n    const appCertificate = '88d7864ddaf34842813b3b9237670158';\r\n    const channelName = user.id;\r\n    const role = RtcRole.PUBLISHER;\r\n    \r\n    const expirationTimeInSeconds = 3600\r\n    \r\n    const currentTimestamp = Math.floor(Date.now() / 1000)\r\n    \r\n    const privilegeExpiredTs = currentTimestamp + expirationTimeInSeconds\r\n    const options = {\r\n        appId: \"0c962528da524ac1a646aa034f8b5385\",\r\n        channel: user.id,\r\n    };\r\n    \r\n    const createCall = async () => {\r\n        const token = RtcTokenBuilder.buildTokenWithUid(appID, appCertificate, channelName, 0, role, privilegeExpiredTs);\r\n        initCall(token, user.id, user.name)\r\n        await rtc.client.join(options.appId, options.channel, token, options.uid);\r\n        rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\r\n        await rtc.client.publish([rtc.localAudioTrack])\r\n    }\r\n\r\n    const leaveCall = async () => {\r\n        rtc.localAudioTrack.close();\r\n        await rtc.client.leave();\r\n    }\r\n\r\n    const getAvatar = (name) => {\r\n        const separate = name.split(' ');\r\n        return `${separate[0][0].toUpperCase()}${separate[1] ? separate[1][0].toUpperCase(): ''}`\r\n    }\r\n    \r\n    const capitalize = (name) => {\r\n        const separate = name.split(' ');\r\n        return `${separate[0].charAt(0).toUpperCase()}${separate[0].slice(1)} ${separate[1] ? separate[1].charAt(0).toUpperCase(): ''}${separate[1] ? separate[1].slice(1): ''}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsers(userInCall)\r\n    }, [userInCall])\r\n\r\n    return (\r\n        <Card sx={{ display: 'flex', width: '300px', height: '70px', alignItems: 'center', padding: '10px'}}>\r\n            <Stack direction=\"row\" spacing={2}>\r\n                <Avatar>{ getAvatar(user.name) }</Avatar>\r\n            </Stack>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', padding: '2rem' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        { capitalize(user.name) }\r\n                    </Typography>\r\n                </Box>\r\n                {!users?.some((id) => id === user.id) && !callInProsess  ?\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <IconButton aria-label=\"next\" onClick={createCall}>\r\n                            <SvgIcon component={AddIcCallIcon} inheritViewBox color=\"green\" />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"play/pause\" onClick={leaveCall}>\r\n                            <SvgIcon component={CallEndIcon} inheritViewBox />\r\n                        </IconButton>\r\n                    </Box>\r\n                    : null\r\n                }\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PhoneCard;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { SvgIcon } from \"@mui/material\";\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport PhoneCallbackIcon from '@mui/icons-material/PhoneCallback';\r\n\r\nexport default function CallAlert({open, reciveCall, declineCall, callInProsess, call}) {\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n        <Collapse in={open}>\r\n            <Alert\r\n            action={\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {!callInProsess &&\r\n                    <IconButton aria-label=\"next\" onClick={reciveCall}>\r\n                        <SvgIcon component={PhoneCallbackIcon} inheritViewBox color=\"green\" />\r\n                    </IconButton>\r\n                    }\r\n                    <IconButton aria-label=\"play/pause\" onClick={declineCall}>\r\n                        <SvgIcon component={CallEndIcon} inheritViewBox />\r\n                    </IconButton>\r\n                </Box>\r\n            }\r\n            sx={{ mb: 2 }}\r\n            >\r\n                {callInProsess ? 'En llamada con' : 'Llamada entrante de'} { call?.nameEmit }\r\n            </Alert>\r\n        </Collapse>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nexport default function LeaveAlert({onClose, open, name}) {\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Collapse in={open}>\r\n                <Alert\r\n                action={\r\n                    <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={onClose}\r\n                    >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n                sx={{ mb: 2 }}\r\n                severity='info'\r\n                >\r\n                    { name } ha abandonado la llamada\r\n                </Alert>\r\n            </Collapse>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport { SvgIcon } from \"@mui/material\";\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport CallMadeIcon from '@mui/icons-material/CallMade';\r\n\r\nexport default function SendCall({open, declineCall, callInProsess, call}) {\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n        <Collapse in={open}>\r\n            <Alert\r\n            action={\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    {!callInProsess &&\r\n                    <IconButton aria-label=\"next\">\r\n                        <SvgIcon component={CallMadeIcon} inheritViewBox color=\"green\" />\r\n                    </IconButton>\r\n                    }\r\n                    <IconButton aria-label=\"play/pause\" onClick={declineCall}>\r\n                        <SvgIcon component={CallEndIcon} inheritViewBox />\r\n                    </IconButton>\r\n                </Box>\r\n            }\r\n            sx={{ mb: 2 }}\r\n            >\r\n                {callInProsess ? 'En llamada con' : 'Llamando a '} { call?.name }\r\n            </Alert>\r\n        </Collapse>\r\n        </Box>\r\n    );\r\n}\r\n","import './App.css';\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport * as React from 'react';\nimport io from \"socket.io-client\";\nimport PhoneCard from \"./components/PhoneCard\";\nimport { Container } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n// import CallScreen from './components/Call';\nimport CallAlert from './components/CallAlert';\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport LeaveAlert from './components/LeaveAlert'\nimport SendCall from './components/SendCall';\n\nconst socket = io.connect('https://voice-call-socket.herokuapp.com/');\n\nfunction App() {\n    const [call, setCall] = useState()\n    const [users, setUsers] = useState([]);\n    const [name, setName] = useState('')\n    const [rtc, setRTC] = useState({ localAudioTrack: null, client: null });\n    const [callInProsess, setCallInProsess] = useState(false);\n    const [leaveCallName, setLeaveCall] = useState();\n    const [usersInCall, setUsersInCall] = useState([]);\n    const [sendCall, setSendCall] = useState();\n    const options = {\n        appId: \"0c962528da524ac1a646aa034f8b5385\",\n        channel: \"test\",\n    };\n\n    useLayoutEffect(() => {\n        const startBasicCall = async () => {\n            const client = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n\n            client.on(\"user-published\", async (user, mediaType) => {\n                console.log(user, mediaType);\n                await client.subscribe(user, mediaType);\n                if (mediaType === \"audio\") {\n                    const remoteAudioTrack = user.audioTrack;\n                    remoteAudioTrack.play();\n                }\n                \n                client.on(\"user-unpublished\", async (user) => {\n                    await client.unsubscribe(user);\n                });\n            });\n\n            setRTC((rtc) => ({...rtc, client}))\n        }\n        startBasicCall()\n    }, []);\n\n    const changeStatusToActive = () => {\n        socket.emit('create_user', { name })\n    }\n    \n    const createCall = (token, id, nameUser) => {\n        console.log('CALL TO ', nameUser);\n        setCallInProsess(true);\n        setSendCall({name: nameUser, nameEmit: name, id, token, room: `${id}${socket.id}`})\n        socket.emit('create_call', {nameEmit: name, name: nameUser, id, token, room: `${id}${socket.id}`})\n    }\n\n    const joinCall = async () => {\n        await rtc.client.join(options.appId, call.id, call.token, options.uid);\n        rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n\n        socket.emit('answer_call', {\n            id: call.id,\n            idEmit: call.idEmit,\n            room: call.room\n        })\n        \n        setCallInProsess(true)\n    }\n    \n    const leaveCall = async () => {\n        setCallInProsess(false)\n        if(rtc.localAudioTrack) {\n            rtc.localAudioTrack.close();\n            await rtc.client.leave();\n        }\n\n        if(call) {\n            socket.emit('leave_call', {\n                name,\n                id: call.id,\n                token: call.token,\n                room: call.room,\n                idEmit: call.idEmit\n            })\n        }\n        \n        if(sendCall) {\n            socket.emit('leave_call', {\n                name,\n                id: socket.id,\n                token: sendCall.token,\n                room: sendCall.room,\n                idEmit: sendCall.idEmit\n            })\n        }\n\n        setCall(undefined)\n        setSendCall(undefined)\n    }\n\n    useEffect(() => {\n        socket.on('new_active', (data) => {\n            setUsers((value) => [...value.filter((user) => user.id !== data.id), data]);\n        });\n        socket.on('recive_call', (data) => {\n            console.log(data);\n            setCall(data);\n        });\n        socket.on('leave', (data) => {\n            console.log(data);\n            setLeaveCall(data)\n        });\n        socket.on('users_in_call', (data) => {\n            console.log(data, sendCall?.id);\n            if(data.some((id) => id === sendCall?.id || id === call?.id)) {\n                setCallInProsess(true)\n            } else {\n                setCallInProsess(false)\n            }\n            setUsersInCall(data)\n        })\n    }, [call?.id, sendCall?.id]);\n    return (\n        <div className=\"App\">\n            <SendCall\n                open={sendCall !== undefined && !leaveCallName}\n                call={sendCall}\n                callInProsess={usersInCall.some((id) => id === sendCall?.id)}\n                declineCall={leaveCall}\n            />\n            <CallAlert open={call !== undefined && !leaveCallName} declineCall={() => leaveCall()} reciveCall={() => joinCall()} callInProsess={callInProsess} call={call} />\n            <LeaveAlert open={leaveCallName !== undefined} onClose={() => {leaveCall(); setLeaveCall(undefined)}} name={leaveCallName?.name} />\n            <Container>\n                <Box sx={{ width: '100%' }}>\n                    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={6}>\n                            <Box sx={{display: 'flex', margin: '2rem auto', width: '300px', gap: '1rem', flexDirection: 'column'}}>\n                                {users.map((user) =>\n                                    <PhoneCard\n                                        user={user}\n                                        initCall={(token, id, name) => createCall(token, id, name)}\n                                        rtc={rtc}\n                                        callInProsess={callInProsess}\n                                        userInCall={usersInCall}\n                                    />\n                                )}\n                            </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box sx={{margin: '2rem auto', width: '300px'}}>\n                                <TextField onChange={(event) => setName(event.target.value)} variant='standard' label='Ingresa tu nombre' />\n                            </Box>\n                            <Box sx={{margin: '0 auto', width: '300px'}}>\n                                <Button variant=\"outlined\" size='small' onClick={() => changeStatusToActive()}>Unirte</Button>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}